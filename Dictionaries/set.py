# Рассмотрим ещё одну коллекцию Python — множество (set). Чтобы задать множество, можно перечислить его
#  элементы внутри фигурных скобок. Например, создадим множество гласных букв русского алфавита:

vowels = {"а", "e", "ё", "и", "о", "у", "ы", "э", "ю", "я"}

# Для создания пустого множества следует использовать функцию set() без аргументов, 
# а для определения количества элементов используется уже известная нам функция len():

empty_set = set()
print(f"Длина пустого множества равна {len(empty_set)}.")

# Множество можно получить из других коллекций, применив к ним функцию set(). Например, создадим множество из строки:

word = "коллекция"
letters = set(word)
print(letters)

# Выполнив программу два раза, получим следующий вывод программы:
# {'е', 'о', 'и', 'я', 'к', 'л', 'ц'}
# {'л', 'к', 'и', 'ц', 'я', 'е', 'о'}
# Обратите внимание: порядок вывода элементов множества при выполнении примера может меняться произвольно из-за свойства 
# неупорядоченности множества. Так, элементы множества не имеют индексов, и можно только проверить 
# принадлежность элемента множеству.

# Другое свойство множества — уникальность его элементов: они не имеют дублей.

# В итоге в примере мы получили множество уникальных букв слова, потеряв при этом порядок.

# Проверить, принадлежит ли значение множеству, можно с помощью оператора in.

# Узнаем, принадлежит ли введённая буква русского алфавита к гласным:
vowels = {"а", "e", "ё", "и", "о", "у", "ы", "э", "ю", "я"}
letter = input("Введите букву русского алфавита: ")
if letter.lower() in vowels:
    print("Гласная буква")
else:
    print("Согласная буква")