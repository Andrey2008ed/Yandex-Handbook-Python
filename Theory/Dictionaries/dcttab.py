d, key, default = ""

len(d)
# Возвращает количество ключей в словаре
d = {"a": 1, "b": 2, "c": 3}
print(len(d))
# 3

del d[key]
# Удалить ключ из словаря. Если ключа нет, то вызывается исключение KeyError
d = {"a": 1, "b": 2, "c": 3}
del d["b"]
print(d)
# {"a": 1, "c": 3}

dict.clear()
# Удалить все ключи и значения в словаре
d = {"a": 1, "b": 2, "c": 3}
d.clear()
print(d)
# {}

dict.copy()
# Возвращает копию словаря
d = {"a": 1, "b": 2, "c": 3}
d_new = d.copy()
print(d_new)
# {"a": 1, "b": 2, "c": 3}

dict.get(key, default)
# Возвращает значение по ключу key. Если ключа нет, то возвращает значение default
d = {"a": 1, "b": 2, "c": 3}
print(d.get("e", "Ключа нет в словаре"))
# Ключа нет в словаре


dict.items()
# Возвращает итерируемый объект, состоящий из кортежей (ключ, значение) словаря
d = {"a": 1, "b": 2, "c": 3}
for key, value in d.items():
    print(key, value)
# a 1
# b 2
# c 3

dict.keys()
# Возвращает итерируемый объект, состоящий из ключей словаря
d = {"a": 1, "b": 2, "c": 3}
for key in d.keys():
    print(key)
# a
# b
# c

d.pop(key, default)
# Возвращает значение по ключу key и удаляет его из словаря. Если ключа нет, то возвращает default
d = {"a": 1, "b": 2, "c": 3}
x = d.pop("a")
print(x)
# 1

dict.values()
# Возвращает итерируемый объект, состоящий из значений словаря
d = {"a": 1, "b": 2, "c": 3}
for value in d.values():
    print(value)
# 1
# 2
# 3








