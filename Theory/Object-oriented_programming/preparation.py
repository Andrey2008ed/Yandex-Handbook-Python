"""
Давайте перепишем пример про автомобили с использованием ООП. Создадим класс Car и пока оставим в нём 
инструкцию-заглушку pass:
"""
class Car:
    pass

"""
В классах описываются свойства объектов и действия объектов или совершаемые действия над ними.

Свойства объектов называются атрибутами. По сути атрибуты — переменные, в значениях которых хранятся свойства объекта. 
Для создания или изменения значения атрибута необходимо использовать следующий синтаксис:

<имя_объекта>.<имя_атрибута> = <значение>

Действия объектов называются методами. Методы очень похожи на функции, в них можно передавать аргументы и 
возвращать значения с помощью оператора return, но вызываются методы после указания конкретного объекта. 
Для создания метода используется следующий синтаксис:

def <имя_метода>(self, <аргументы>):
    <тело метода>

В методах первым аргументом всегда идёт объект self. Он является объектом, для которого вызван метод. self 
позволяет использовать внутри описания класса атрибуты объекта в методах и вызывать сами методы.

Во всех классах Python есть специальный метод __init()__, который вызывается при создании объекта. 
В этом методе происходит инициализация всех атрибутов класса. В методы можно передавать аргументы. 
Вернёмся к нашему примеру и создадим в классе метод __init()__, который будет при создании автомобиля принимать 
его свойства как аргументы:
"""

class Car:

    def __init__(self, color, consumption, tank_volume, mileage=0):
        self.color = color
        self.consumption = consumption
        self.tank_volume = tank_volume
        self.reserve = tank_volume
        self.mileage = mileage
        self.engine_on = False

"""
Итак, мы создали класс автомобилей и описали метод __init__() для инициализации его объектов. 
Для создания объекта класса нужно использовать следующий синтаксис:

<имя_объекта> = <ИмяКласса>(<аргументы метода __init__>)

Создадим в программе автомобиль класса Car. Для этого добавим следующую строку в основной код программы после 
описания класса, отделив от класса согласно PEP8 двумя пустыми строками:
"""
# <имя_объекта> = car1, <ИмяКласса> = Car, (<аргументы метода __init__>) = (color="black", consumption=10, tank_volume=55)
car_1 = Car(color="black", consumption=10, tank_volume=55)

"""
Обратите внимание: наш код стало легче читать, потому что мы видим, что создаётся объект определённого класса, 
а не просто вызывается функция, из которой возвращается значение-словарь.
"""





