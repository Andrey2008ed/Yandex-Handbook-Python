"""
В Python аргументом функции может быть другая функция. Обратите внимание, что мы говорим именно о 
самой функции, а не о возвращаемом ей значении. Для того, чтобы передать функцию как аргумент, 
нужно указать значением аргумента имя функции без круглых скобок. Так мы не будем вызывать функцию, 
а передадим ссылку на неё. Функции, которые принимают аргументы-функции, называют функциями высшего порядка.

Рассмотрим пару полезных встроенных функций высшего порядка. Функция filter() позволяет отобрать 
элементы из итерируемого объекта по некоторому критерию. Результат работы функции — итератор.

Критерий отбора — функция, возвращающая значения логического типа. Функция filter() последовательно 
проверяет значение функции-критерия для каждого элемента и при значении True элемент попадает в 
выходной итератор. Напишем программу, которая выберет из списка целых чисел только положительные:
"""

def only_pos(x):
    return x > 0


result = filter(only_pos, [-1, 5, 6, -10, 0])
print(", ".join(str(x) for x in result))
# 5, 6

"""
В качестве функции-критерия можно использовать стандартные функции и методы Python. 
Главное, чтобы эти функции и методы возвращали значения логического типа данных и могли работать 
с типами данных передаваемых в них аргументов.

Напишем программу, которая из всех символов строки выберет буквы. 
В примере мы используем метод isalpha() для типа данных str.
"""

result = filter(str.isalpha, "123ABcd()")
print("".join(result))
# ABcd

